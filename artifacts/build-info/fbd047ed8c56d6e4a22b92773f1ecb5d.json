{
	"id": "fbd047ed8c56d6e4a22b92773f1ecb5d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"CoinFlip.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract CoinFlip {\n\tuint256 public consecutiveWins;\n\tuint256 lastHash;\n\tuint256 FACTOR =\n\t\t57896044618658097711785492504343953926634992332820282019728792003956564819968;\n\tCoinFlip cf;\n\n\tconstructor(address _target) {\n\t\tconsecutiveWins = 0;\n\t\tcf = CoinFlip(_target);\n\t}\n\n\tfunction flip(bool _guess) public returns (bool) {\n\t\tuint256 blockValue = uint256(blockhash(block.number - 1));\n\n\t\tif (lastHash == blockValue) {\n\t\t\trevert();\n\t\t}\n\n\t\tlastHash = blockValue;\n\t\tuint256 coinFlip = blockValue / FACTOR;\n\n\t\tbool side = coinFlip == 1 ? true : false;\n\n\t\trequire(cf.flip(side), \"error\");\n\n\t\tif (side == _guess) {\n\t\t\tconsecutiveWins++;\n\t\t\treturn true;\n\t\t} else {\n\t\t\tconsecutiveWins = 0;\n\t\t\treturn false;\n\t\t}\n\t}\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"CoinFlip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_target",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoinFlip.sol\":57:763  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"CoinFlip.sol\":149:226  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"CoinFlip.sol\":130:226  uint256 FACTOR =... */\n  0x02\n  sstore\n    /* \"CoinFlip.sol\":244:326  constructor(address _target) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"CoinFlip.sol\":295:296  0 */\n  0x00\n    /* \"CoinFlip.sol\":277:292  consecutiveWins */\n  dup1\n    /* \"CoinFlip.sol\":277:296  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"CoinFlip.sol\":314:321  _target */\n  dup1\n    /* \"CoinFlip.sol\":300:302  cf */\n  0x03\n  0x00\n    /* \"CoinFlip.sol\":300:322  cf = CoinFlip(_target) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"CoinFlip.sol\":244:326  constructor(address _target) {... */\n  pop\n    /* \"CoinFlip.sol\":57:763  contract CoinFlip {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_14\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:542   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":512:536   */\n  tag_17\n    /* \"#utility.yul\":530:535   */\n  dup3\n    /* \"#utility.yul\":512:536   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":501:536   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:542   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":548:674   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":625:667   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":618:623   */\n  dup3\n    /* \"#utility.yul\":614:668   */\n  and\n    /* \"#utility.yul\":603:668   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:674   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":680:802   */\ntag_11:\n    /* \"#utility.yul\":753:777   */\n  tag_21\n    /* \"#utility.yul\":771:776   */\n  dup2\n    /* \"#utility.yul\":753:777   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":746:751   */\n  dup2\n    /* \"#utility.yul\":743:778   */\n  eq\n    /* \"#utility.yul\":733:735   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":789:790   */\n  dup1\n    /* \"#utility.yul\":782:794   */\n  revert\n    /* \"#utility.yul\":733:735   */\ntag_22:\n    /* \"#utility.yul\":723:802   */\n  pop\n  jump\t// out\n    /* \"CoinFlip.sol\":57:763  contract CoinFlip {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoinFlip.sol\":57:763  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CoinFlip.sol\":329:761  function flip(bool _guess) public returns (bool) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CoinFlip.sol\":78:108  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CoinFlip.sol\":329:761  function flip(bool _guess) public returns (bool) {... */\n    tag_8:\n        /* \"CoinFlip.sol\":372:376  bool */\n      0x00\n        /* \"CoinFlip.sol\":382:400  uint256 blockValue */\n      dup1\n        /* \"CoinFlip.sol\":436:437  1 */\n      0x01\n        /* \"CoinFlip.sol\":421:433  block.number */\n      number\n        /* \"CoinFlip.sol\":421:437  block.number - 1 */\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"CoinFlip.sol\":411:438  blockhash(block.number - 1) */\n      blockhash\n        /* \"CoinFlip.sol\":403:439  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"CoinFlip.sol\":382:439  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"CoinFlip.sol\":460:470  blockValue */\n      dup1\n        /* \"CoinFlip.sol\":448:456  lastHash */\n      sload(0x01)\n        /* \"CoinFlip.sol\":448:470  lastHash == blockValue */\n      eq\n        /* \"CoinFlip.sol\":444:490  if (lastHash == blockValue) {... */\n      iszero\n      tag_18\n      jumpi\n        /* \"CoinFlip.sol\":477:485  revert() */\n      0x00\n      dup1\n      revert\n        /* \"CoinFlip.sol\":444:490  if (lastHash == blockValue) {... */\n    tag_18:\n        /* \"CoinFlip.sol\":505:515  blockValue */\n      dup1\n        /* \"CoinFlip.sol\":494:502  lastHash */\n      0x01\n        /* \"CoinFlip.sol\":494:515  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CoinFlip.sol\":519:535  uint256 coinFlip */\n      0x00\n        /* \"CoinFlip.sol\":551:557  FACTOR */\n      sload(0x02)\n        /* \"CoinFlip.sol\":538:548  blockValue */\n      dup3\n        /* \"CoinFlip.sol\":538:557  blockValue / FACTOR */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"CoinFlip.sol\":519:557  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"CoinFlip.sol\":562:571  bool side */\n      0x00\n        /* \"CoinFlip.sol\":586:587  1 */\n      0x01\n        /* \"CoinFlip.sol\":574:582  coinFlip */\n      dup3\n        /* \"CoinFlip.sol\":574:587  coinFlip == 1 */\n      eq\n        /* \"CoinFlip.sol\":574:602  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"CoinFlip.sol\":597:602  false */\n      0x00\n        /* \"CoinFlip.sol\":574:602  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"CoinFlip.sol\":590:594  true */\n      0x01\n        /* \"CoinFlip.sol\":574:602  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"CoinFlip.sol\":562:602  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"CoinFlip.sol\":615:617  cf */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CoinFlip.sol\":615:622  cf.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"CoinFlip.sol\":623:627  side */\n      dup3\n        /* \"CoinFlip.sol\":615:628  cf.flip(side) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_23:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"CoinFlip.sol\":607:638  require(cf.flip(side), \"error\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"CoinFlip.sol\":655:661  _guess */\n      dup5\n        /* \"CoinFlip.sol\":647:661  side == _guess */\n      iszero\n      iszero\n        /* \"CoinFlip.sol\":647:651  side */\n      dup2\n        /* \"CoinFlip.sol\":647:661  side == _guess */\n      iszero\n      iszero\n      eq\n        /* \"CoinFlip.sol\":643:758  if (side == _guess) {... */\n      iszero\n      tag_32\n      jumpi\n        /* \"CoinFlip.sol\":668:683  consecutiveWins */\n      0x00\n      dup1\n        /* \"CoinFlip.sol\":668:685  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"CoinFlip.sol\":697:701  true */\n      0x01\n        /* \"CoinFlip.sol\":690:701  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_15)\n        /* \"CoinFlip.sol\":643:758  if (side == _guess) {... */\n    tag_32:\n        /* \"CoinFlip.sol\":735:736  0 */\n      0x00\n        /* \"CoinFlip.sol\":717:732  consecutiveWins */\n      dup1\n        /* \"CoinFlip.sol\":717:736  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CoinFlip.sol\":748:753  false */\n      0x00\n        /* \"CoinFlip.sol\":741:753  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"CoinFlip.sol\":329:761  function flip(bool _guess) public returns (bool) {... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CoinFlip.sol\":78:108  uint256 public consecutiveWins */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:140   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":88:94   */\n      dup2\n        /* \"#utility.yul\":75:95   */\n      calldataload\n        /* \"#utility.yul\":66:95   */\n      swap1\n      pop\n        /* \"#utility.yul\":104:134   */\n      tag_39\n        /* \"#utility.yul\":128:133   */\n      dup2\n        /* \"#utility.yul\":104:134   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":56:140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":146:283   */\n    tag_41:\n      0x00\n        /* \"#utility.yul\":231:237   */\n      dup2\n        /* \"#utility.yul\":225:238   */\n      mload\n        /* \"#utility.yul\":216:238   */\n      swap1\n      pop\n        /* \"#utility.yul\":247:277   */\n      tag_43\n        /* \"#utility.yul\":271:276   */\n      dup2\n        /* \"#utility.yul\":247:277   */\n      tag_40\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":206:283   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":289:545   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":394:396   */\n      0x20\n        /* \"#utility.yul\":382:391   */\n      dup3\n        /* \"#utility.yul\":373:380   */\n      dup5\n        /* \"#utility.yul\":369:392   */\n      sub\n        /* \"#utility.yul\":365:397   */\n      slt\n        /* \"#utility.yul\":362:364   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":410:411   */\n      0x00\n        /* \"#utility.yul\":407:408   */\n      dup1\n        /* \"#utility.yul\":400:412   */\n      revert\n        /* \"#utility.yul\":362:364   */\n    tag_45:\n        /* \"#utility.yul\":453:454   */\n      0x00\n        /* \"#utility.yul\":478:528   */\n      tag_46\n        /* \"#utility.yul\":520:527   */\n      dup5\n        /* \"#utility.yul\":511:517   */\n      dup3\n        /* \"#utility.yul\":500:509   */\n      dup6\n        /* \"#utility.yul\":496:518   */\n      add\n        /* \"#utility.yul\":478:528   */\n      tag_37\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":468:528   */\n      swap2\n      pop\n        /* \"#utility.yul\":424:538   */\n      pop\n        /* \"#utility.yul\":352:545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":551:829   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":667:669   */\n      0x20\n        /* \"#utility.yul\":655:664   */\n      dup3\n        /* \"#utility.yul\":646:653   */\n      dup5\n        /* \"#utility.yul\":642:665   */\n      sub\n        /* \"#utility.yul\":638:670   */\n      slt\n        /* \"#utility.yul\":635:637   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":683:684   */\n      0x00\n        /* \"#utility.yul\":680:681   */\n      dup1\n        /* \"#utility.yul\":673:685   */\n      revert\n        /* \"#utility.yul\":635:637   */\n    tag_48:\n        /* \"#utility.yul\":726:727   */\n      0x00\n        /* \"#utility.yul\":751:812   */\n      tag_49\n        /* \"#utility.yul\":804:811   */\n      dup5\n        /* \"#utility.yul\":795:801   */\n      dup3\n        /* \"#utility.yul\":784:793   */\n      dup6\n        /* \"#utility.yul\":780:802   */\n      add\n        /* \"#utility.yul\":751:812   */\n      tag_41\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":741:812   */\n      swap2\n      pop\n        /* \"#utility.yul\":697:822   */\n      pop\n        /* \"#utility.yul\":625:829   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":835:944   */\n    tag_50:\n        /* \"#utility.yul\":916:937   */\n      tag_52\n        /* \"#utility.yul\":931:936   */\n      dup2\n        /* \"#utility.yul\":916:937   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":911:914   */\n      dup3\n        /* \"#utility.yul\":904:938   */\n      mstore\n        /* \"#utility.yul\":894:944   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":950:1252   */\n    tag_54:\n      0x00\n        /* \"#utility.yul\":1113:1179   */\n      tag_56\n        /* \"#utility.yul\":1177:1178   */\n      0x05\n        /* \"#utility.yul\":1172:1175   */\n      dup4\n        /* \"#utility.yul\":1113:1179   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1106:1179   */\n      swap2\n      pop\n        /* \"#utility.yul\":1209:1216   */\n      0x6572726f72000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1205:1206   */\n      0x00\n        /* \"#utility.yul\":1200:1203   */\n      dup4\n        /* \"#utility.yul\":1196:1207   */\n      add\n        /* \"#utility.yul\":1189:1217   */\n      mstore\n        /* \"#utility.yul\":1243:1245   */\n      0x20\n        /* \"#utility.yul\":1238:1241   */\n      dup3\n        /* \"#utility.yul\":1234:1246   */\n      add\n        /* \"#utility.yul\":1227:1246   */\n      swap1\n      pop\n        /* \"#utility.yul\":1096:1252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1258:1376   */\n    tag_58:\n        /* \"#utility.yul\":1345:1369   */\n      tag_60\n        /* \"#utility.yul\":1363:1368   */\n      dup2\n        /* \"#utility.yul\":1345:1369   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1340:1343   */\n      dup3\n        /* \"#utility.yul\":1333:1370   */\n      mstore\n        /* \"#utility.yul\":1323:1376   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1382:1592   */\n    tag_10:\n      0x00\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1496:1505   */\n      dup3\n        /* \"#utility.yul\":1492:1510   */\n      add\n        /* \"#utility.yul\":1484:1510   */\n      swap1\n      pop\n        /* \"#utility.yul\":1520:1585   */\n      tag_63\n        /* \"#utility.yul\":1582:1583   */\n      0x00\n        /* \"#utility.yul\":1571:1580   */\n      dup4\n        /* \"#utility.yul\":1567:1584   */\n      add\n        /* \"#utility.yul\":1558:1564   */\n      dup5\n        /* \"#utility.yul\":1520:1585   */\n      tag_50\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1474:1592   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1598:2017   */\n    tag_31:\n      0x00\n        /* \"#utility.yul\":1802:1804   */\n      0x20\n        /* \"#utility.yul\":1791:1800   */\n      dup3\n        /* \"#utility.yul\":1787:1805   */\n      add\n        /* \"#utility.yul\":1779:1805   */\n      swap1\n      pop\n        /* \"#utility.yul\":1851:1860   */\n      dup2\n        /* \"#utility.yul\":1845:1849   */\n      dup2\n        /* \"#utility.yul\":1841:1861   */\n      sub\n        /* \"#utility.yul\":1837:1838   */\n      0x00\n        /* \"#utility.yul\":1826:1835   */\n      dup4\n        /* \"#utility.yul\":1822:1839   */\n      add\n        /* \"#utility.yul\":1815:1862   */\n      mstore\n        /* \"#utility.yul\":1879:2010   */\n      tag_65\n        /* \"#utility.yul\":2005:2009   */\n      dup2\n        /* \"#utility.yul\":1879:2010   */\n      tag_54\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1871:2010   */\n      swap1\n      pop\n        /* \"#utility.yul\":1769:2017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2023:2245   */\n    tag_14:\n      0x00\n        /* \"#utility.yul\":2154:2156   */\n      0x20\n        /* \"#utility.yul\":2143:2152   */\n      dup3\n        /* \"#utility.yul\":2139:2157   */\n      add\n        /* \"#utility.yul\":2131:2157   */\n      swap1\n      pop\n        /* \"#utility.yul\":2167:2238   */\n      tag_67\n        /* \"#utility.yul\":2235:2236   */\n      0x00\n        /* \"#utility.yul\":2224:2233   */\n      dup4\n        /* \"#utility.yul\":2220:2237   */\n      add\n        /* \"#utility.yul\":2211:2217   */\n      dup5\n        /* \"#utility.yul\":2167:2238   */\n      tag_58\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2121:2245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2251:2420   */\n    tag_57:\n      0x00\n        /* \"#utility.yul\":2369:2375   */\n      dup3\n        /* \"#utility.yul\":2364:2367   */\n      dup3\n        /* \"#utility.yul\":2357:2376   */\n      mstore\n        /* \"#utility.yul\":2409:2413   */\n      0x20\n        /* \"#utility.yul\":2404:2407   */\n      dup3\n        /* \"#utility.yul\":2400:2414   */\n      add\n        /* \"#utility.yul\":2385:2414   */\n      swap1\n      pop\n        /* \"#utility.yul\":2347:2420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2426:2611   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":2483:2503   */\n      tag_70\n        /* \"#utility.yul\":2501:2502   */\n      dup3\n        /* \"#utility.yul\":2483:2503   */\n      tag_61\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2478:2503   */\n      swap2\n      pop\n        /* \"#utility.yul\":2517:2537   */\n      tag_71\n        /* \"#utility.yul\":2535:2536   */\n      dup4\n        /* \"#utility.yul\":2517:2537   */\n      tag_61\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2512:2537   */\n      swap3\n      pop\n        /* \"#utility.yul\":2556:2557   */\n      dup3\n        /* \"#utility.yul\":2546:2548   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":2561:2579   */\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2546:2548   */\n    tag_72:\n        /* \"#utility.yul\":2603:2604   */\n      dup3\n        /* \"#utility.yul\":2600:2601   */\n      dup3\n        /* \"#utility.yul\":2596:2605   */\n      div\n        /* \"#utility.yul\":2591:2605   */\n      swap1\n      pop\n        /* \"#utility.yul\":2468:2611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2617:2808   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":2677:2697   */\n      tag_76\n        /* \"#utility.yul\":2695:2696   */\n      dup3\n        /* \"#utility.yul\":2677:2697   */\n      tag_61\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2672:2697   */\n      swap2\n      pop\n        /* \"#utility.yul\":2711:2731   */\n      tag_77\n        /* \"#utility.yul\":2729:2730   */\n      dup4\n        /* \"#utility.yul\":2711:2731   */\n      tag_61\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2706:2731   */\n      swap3\n      pop\n        /* \"#utility.yul\":2750:2751   */\n      dup3\n        /* \"#utility.yul\":2747:2748   */\n      dup3\n        /* \"#utility.yul\":2744:2752   */\n      lt\n        /* \"#utility.yul\":2741:2743   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2755:2773   */\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2741:2743   */\n    tag_78:\n        /* \"#utility.yul\":2800:2801   */\n      dup3\n        /* \"#utility.yul\":2797:2798   */\n      dup3\n        /* \"#utility.yul\":2793:2802   */\n      sub\n        /* \"#utility.yul\":2785:2802   */\n      swap1\n      pop\n        /* \"#utility.yul\":2662:2808   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2814:2904   */\n    tag_53:\n      0x00\n        /* \"#utility.yul\":2891:2896   */\n      dup2\n        /* \"#utility.yul\":2884:2897   */\n      iszero\n        /* \"#utility.yul\":2877:2898   */\n      iszero\n        /* \"#utility.yul\":2866:2898   */\n      swap1\n      pop\n        /* \"#utility.yul\":2856:2904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2910:2987   */\n    tag_61:\n      0x00\n        /* \"#utility.yul\":2976:2981   */\n      dup2\n        /* \"#utility.yul\":2965:2981   */\n      swap1\n      pop\n        /* \"#utility.yul\":2955:2987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2993:3226   */\n    tag_34:\n      0x00\n        /* \"#utility.yul\":3055:3079   */\n      tag_84\n        /* \"#utility.yul\":3073:3078   */\n      dup3\n        /* \"#utility.yul\":3055:3079   */\n      tag_61\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3046:3079   */\n      swap2\n      pop\n        /* \"#utility.yul\":3101:3167   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3094:3099   */\n      dup3\n        /* \"#utility.yul\":3091:3168   */\n      eq\n        /* \"#utility.yul\":3088:3090   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":3171:3189   */\n      tag_86\n      tag_80\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3088:3090   */\n    tag_85:\n        /* \"#utility.yul\":3218:3219   */\n      0x01\n        /* \"#utility.yul\":3211:3216   */\n      dup3\n        /* \"#utility.yul\":3207:3220   */\n      add\n        /* \"#utility.yul\":3200:3220   */\n      swap1\n      pop\n        /* \"#utility.yul\":3036:3226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3412   */\n    tag_80:\n        /* \"#utility.yul\":3280:3357   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3277:3278   */\n      0x00\n        /* \"#utility.yul\":3270:3358   */\n      mstore\n        /* \"#utility.yul\":3377:3381   */\n      0x11\n        /* \"#utility.yul\":3374:3375   */\n      0x04\n        /* \"#utility.yul\":3367:3382   */\n      mstore\n        /* \"#utility.yul\":3401:3405   */\n      0x24\n        /* \"#utility.yul\":3398:3399   */\n      0x00\n        /* \"#utility.yul\":3391:3406   */\n      revert\n        /* \"#utility.yul\":3418:3598   */\n    tag_74:\n        /* \"#utility.yul\":3466:3543   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3463:3464   */\n      0x00\n        /* \"#utility.yul\":3456:3544   */\n      mstore\n        /* \"#utility.yul\":3563:3567   */\n      0x12\n        /* \"#utility.yul\":3560:3561   */\n      0x04\n        /* \"#utility.yul\":3553:3568   */\n      mstore\n        /* \"#utility.yul\":3587:3591   */\n      0x24\n        /* \"#utility.yul\":3584:3585   */\n      0x00\n        /* \"#utility.yul\":3577:3592   */\n      revert\n        /* \"#utility.yul\":3604:3720   */\n    tag_40:\n        /* \"#utility.yul\":3674:3695   */\n      tag_90\n        /* \"#utility.yul\":3689:3694   */\n      dup2\n        /* \"#utility.yul\":3674:3695   */\n      tag_53\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3667:3672   */\n      dup2\n        /* \"#utility.yul\":3664:3696   */\n      eq\n        /* \"#utility.yul\":3654:3656   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":3710:3711   */\n      0x00\n        /* \"#utility.yul\":3707:3708   */\n      dup1\n        /* \"#utility.yul\":3700:3712   */\n      revert\n        /* \"#utility.yul\":3654:3656   */\n    tag_91:\n        /* \"#utility.yul\":3644:3720   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220017712aac8832f4b3c7510c7f30b6817387dc29e126085d3cf5b81e26d3a638d64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:805:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:284:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "530:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "512:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:1",
														"type": ""
													}
												],
												"src": "446:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "603:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "618:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "603:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "575:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "585:7:1",
														"type": ""
													}
												],
												"src": "548:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "746:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "753:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "743:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:43:1"
															},
															"nodeType": "YulIf",
															"src": "733:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "716:5:1",
														"type": ""
													}
												],
												"src": "680:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b506040516105fc3803806105fc833981810160405281019061005691906100b9565b6000808190555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061012b565b6000815190506100b381610114565b92915050565b6000602082840312156100cb57600080fd5b60006100d9848285016100a4565b91505092915050565b60006100ed826100f4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61011d816100e2565b811461012857600080fd5b50565b6104c28061013a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061023c565b610089565b60405161006291906102ec565b60405180910390f35b61007361020c565b6040516100809190610327565b60405180910390f35b6000806001436100999190610384565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c59190610353565b90506000600182146100d85760006100db565b60015b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b815260040161013891906102ec565b602060405180830381600087803b15801561015257600080fd5b505af1158015610166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018a9190610265565b6101c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c090610307565b60405180910390fd5b84151581151514156101f8576000808154809291906101e7906103ce565b919050555060019350505050610207565b60008081905550600093505050505b919050565b60005481565b60008135905061022181610475565b92915050565b60008151905061023681610475565b92915050565b60006020828403121561024e57600080fd5b600061025c84828501610212565b91505092915050565b60006020828403121561027757600080fd5b600061028584828501610227565b91505092915050565b610297816103b8565b82525050565b60006102aa600583610342565b91507f6572726f720000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6102e6816103c4565b82525050565b6000602082019050610301600083018461028e565b92915050565b600060208201905081810360008301526103208161029d565b9050919050565b600060208201905061033c60008301846102dd565b92915050565b600082825260208201905092915050565b600061035e826103c4565b9150610369836103c4565b92508261037957610378610446565b5b828204905092915050565b600061038f826103c4565b915061039a836103c4565b9250828210156103ad576103ac610417565b5b828203905092915050565b60008115159050919050565b6000819050919050565b60006103d9826103c4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561040c5761040b610417565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61047e816103b8565b811461048957600080fd5b5056fea2646970667358221220017712aac8832f4b3c7510c7f30b6817387dc29e126085d3cf5b81e26d3a638d64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5FC CODESIZE SUB DUP1 PUSH2 0x5FC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x56 SWAP2 SWAP1 PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB3 DUP2 PUSH2 0x114 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD9 DUP5 DUP3 DUP6 ADD PUSH2 0xA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED DUP3 PUSH2 0xF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D DUP2 PUSH2 0xE2 JUMP JUMPDEST DUP2 EQ PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4C2 DUP1 PUSH2 0x13A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x23C JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x166 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0 SWAP1 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1E7 SWAP1 PUSH2 0x3CE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x207 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x221 DUP2 PUSH2 0x475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x236 DUP2 PUSH2 0x475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25C DUP5 DUP3 DUP6 ADD PUSH2 0x212 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x285 DUP5 DUP3 DUP6 ADD PUSH2 0x227 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x297 DUP2 PUSH2 0x3B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA PUSH1 0x5 DUP4 PUSH2 0x342 JUMP JUMPDEST SWAP2 POP PUSH32 0x6572726F72000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E6 DUP2 PUSH2 0x3C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x301 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x320 DUP2 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E DUP3 PUSH2 0x3C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x369 DUP4 PUSH2 0x3C4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x379 JUMPI PUSH2 0x378 PUSH2 0x446 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 PUSH2 0x3C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x39A DUP4 PUSH2 0x3C4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3AD JUMPI PUSH2 0x3AC PUSH2 0x417 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D9 DUP3 PUSH2 0x3C4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x40C JUMPI PUSH2 0x40B PUSH2 0x417 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x47E DUP2 PUSH2 0x3B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD PUSH24 0x12AAC8832F4B3C7510C7F30B6817387DC29E126085D3CF5B DUP2 0xE2 PUSH14 0x3A638D64736F6C63430008000033 ",
							"sourceMap": "57:706:0:-:0;;;149:77;130:96;;244:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;295:1;277:15;:19;;;;314:7;300:2;;:22;;;;;;;;;;;;;;;;;;244:82;57:706;;7:143:1;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;57:706:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3723:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "56:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "88:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "75:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "75:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "66:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "128:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "104:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "104:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "34:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "42:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "50:5:1",
														"type": ""
													}
												],
												"src": "7:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "206:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "216:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "231:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "216:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "271:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "247:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "352:193:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "398:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "407:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "410:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "400:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "400:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "400:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "373:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "382:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "369:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "369:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "365:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "365:32:1"
															},
															"nodeType": "YulIf",
															"src": "362:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "424:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "439:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "453:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "443:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "468:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "500:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "511:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "496:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "496:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "520:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "478:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "478:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "468:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "322:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "333:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "345:6:1",
														"type": ""
													}
												],
												"src": "289:256:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "625:204:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "671:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "683:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "673:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "673:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "646:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "655:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "642:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "642:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "667:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "638:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "638:32:1"
															},
															"nodeType": "YulIf",
															"src": "635:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "697:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "712:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "726:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "716:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "741:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "784:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "795:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "780:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "780:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "804:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "751:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "751:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "741:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "595:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "606:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "618:6:1",
														"type": ""
													}
												],
												"src": "551:278:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "894:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "911:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "931:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "916:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "916:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "904:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "904:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "882:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "889:3:1",
														"type": ""
													}
												],
												"src": "835:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1096:156:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1106:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1172:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1177:1:1",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1113:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:66:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1106:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1200:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1205:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1196:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1196:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1209:7:1",
																		"type": "",
																		"value": "error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1189:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1189:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1238:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1243:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1234:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1227:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1084:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1092:3:1",
														"type": ""
													}
												],
												"src": "950:302:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1323:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1340:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1363:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1345:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1333:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1333:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1311:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1318:3:1",
														"type": ""
													}
												],
												"src": "1258:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1484:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1496:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1492:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1492:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1484:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1558:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1571:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1582:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1567:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1520:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1520:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1446:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1458:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1469:4:1",
														"type": ""
													}
												],
												"src": "1382:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1779:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1802:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1787:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1779:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1826:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1837:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1822:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1845:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1851:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1841:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1841:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1815:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1815:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1871:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2005:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1879:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1871:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1749:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1764:4:1",
														"type": ""
													}
												],
												"src": "1598:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2121:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2131:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2143:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2154:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2139:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2139:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2131:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2211:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2224:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2235:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2167:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2167:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2167:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2093:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2105:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2116:4:1",
														"type": ""
													}
												],
												"src": "2023:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2347:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2364:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2369:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2357:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2385:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2404:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2400:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2385:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2319:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2324:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2335:11:1",
														"type": ""
													}
												],
												"src": "2251:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2468:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2478:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2501:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2483:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2483:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2478:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2512:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2535:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2517:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2512:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2559:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2561:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2561:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2561:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2556:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2549:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2549:9:1"
															},
															"nodeType": "YulIf",
															"src": "2546:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2591:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2600:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2603:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2596:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2596:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2591:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2457:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2460:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2466:1:1",
														"type": ""
													}
												],
												"src": "2426:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2662:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2672:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2695:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2677:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2672:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2706:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2729:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2711:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2711:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2706:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2753:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2755:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2755:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2747:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2750:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:8:1"
															},
															"nodeType": "YulIf",
															"src": "2741:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2785:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2797:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2800:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2793:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2785:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2648:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2651:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2657:4:1",
														"type": ""
													}
												],
												"src": "2617:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2856:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2866:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2891:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2884:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2884:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2877:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2877:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2866:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2838:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2848:7:1",
														"type": ""
													}
												],
												"src": "2814:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2955:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2965:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2976:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2965:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2937:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2947:7:1",
														"type": ""
													}
												],
												"src": "2910:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3036:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3046:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3073:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3055:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3046:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3169:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3171:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3171:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3171:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3094:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3101:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3091:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:77:1"
															},
															"nodeType": "YulIf",
															"src": "3088:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3200:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3211:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3218:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3207:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3207:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3022:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3032:3:1",
														"type": ""
													}
												],
												"src": "2993:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3260:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3277:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3270:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3270:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3270:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3374:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3377:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3367:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3367:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3367:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3398:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3391:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3391:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3232:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3446:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3463:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3466:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3456:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3456:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3560:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3563:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3553:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3553:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3553:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3584:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3587:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3577:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3577:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3577:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3418:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3644:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3698:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3707:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3710:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3700:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3700:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3700:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3667:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3689:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3674:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3674:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3664:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3664:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3657:40:1"
															},
															"nodeType": "YulIf",
															"src": "3654:2:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3637:5:1",
														"type": ""
													}
												],
												"src": "3604:116:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n\n        mstore(add(pos, 0), \"error\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061023c565b610089565b60405161006291906102ec565b60405180910390f35b61007361020c565b6040516100809190610327565b60405180910390f35b6000806001436100999190610384565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c59190610353565b90506000600182146100d85760006100db565b60015b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b815260040161013891906102ec565b602060405180830381600087803b15801561015257600080fd5b505af1158015610166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018a9190610265565b6101c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c090610307565b60405180910390fd5b84151581151514156101f8576000808154809291906101e7906103ce565b919050555060019350505050610207565b60008081905550600093505050505b919050565b60005481565b60008135905061022181610475565b92915050565b60008151905061023681610475565b92915050565b60006020828403121561024e57600080fd5b600061025c84828501610212565b91505092915050565b60006020828403121561027757600080fd5b600061028584828501610227565b91505092915050565b610297816103b8565b82525050565b60006102aa600583610342565b91507f6572726f720000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6102e6816103c4565b82525050565b6000602082019050610301600083018461028e565b92915050565b600060208201905081810360008301526103208161029d565b9050919050565b600060208201905061033c60008301846102dd565b92915050565b600082825260208201905092915050565b600061035e826103c4565b9150610369836103c4565b92508261037957610378610446565b5b828204905092915050565b600061038f826103c4565b915061039a836103c4565b9250828210156103ad576103ac610417565b5b828203905092915050565b60008115159050919050565b6000819050919050565b60006103d9826103c4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561040c5761040b610417565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61047e816103b8565b811461048957600080fd5b5056fea2646970667358221220017712aac8832f4b3c7510c7f30b6817387dc29e126085d3cf5b81e26d3a638d64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x23C JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x166 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0 SWAP1 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1E7 SWAP1 PUSH2 0x3CE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x207 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x221 DUP2 PUSH2 0x475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x236 DUP2 PUSH2 0x475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25C DUP5 DUP3 DUP6 ADD PUSH2 0x212 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x285 DUP5 DUP3 DUP6 ADD PUSH2 0x227 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x297 DUP2 PUSH2 0x3B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA PUSH1 0x5 DUP4 PUSH2 0x342 JUMP JUMPDEST SWAP2 POP PUSH32 0x6572726F72000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E6 DUP2 PUSH2 0x3C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x301 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x320 DUP2 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E DUP3 PUSH2 0x3C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x369 DUP4 PUSH2 0x3C4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x379 JUMPI PUSH2 0x378 PUSH2 0x446 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 PUSH2 0x3C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x39A DUP4 PUSH2 0x3C4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3AD JUMPI PUSH2 0x3AC PUSH2 0x417 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D9 DUP3 PUSH2 0x3C4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x40C JUMPI PUSH2 0x40B PUSH2 0x417 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x47E DUP2 PUSH2 0x3B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD PUSH24 0x12AAC8832F4B3C7510C7F30B6817387DC29E126085D3CF5B DUP2 0xE2 PUSH14 0x3A638D64736F6C63430008000033 ",
							"sourceMap": "57:706:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:432;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;78:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:432;372:4;382:18;436:1;421:12;:16;;;;:::i;:::-;411:27;403:36;;382:57;;460:10;448:8;;:22;444:46;;;477:8;;;444:46;505:10;494:8;:21;;;;519:16;551:6;;538:10;:19;;;;:::i;:::-;519:38;;562:9;586:1;574:8;:13;:28;;597:5;574:28;;;590:4;574:28;562:40;;615:2;;;;;;;;;;;:7;;;623:4;615:13;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;607:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;655:6;647:14;;:4;:14;;;643:115;;;668:15;;:17;;;;;;;;;:::i;:::-;;;;;;697:4;690:11;;;;;;;643:115;735:1;717:15;:19;;;;748:5;741:12;;;;;329:432;;;;:::o;78:30::-;;;;:::o;7:133:1:-;;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;56:84;;;;:::o;146:137::-;;231:6;225:13;216:22;;247:30;271:5;247:30;:::i;:::-;206:77;;;;:::o;289:256::-;;394:2;382:9;373:7;369:23;365:32;362:2;;;410:1;407;400:12;362:2;453:1;478:50;520:7;511:6;500:9;496:22;478:50;:::i;:::-;468:60;;424:114;352:193;;;;:::o;551:278::-;;667:2;655:9;646:7;642:23;638:32;635:2;;;683:1;680;673:12;635:2;726:1;751:61;804:7;795:6;784:9;780:22;751:61;:::i;:::-;741:71;;697:125;625:204;;;;:::o;835:109::-;916:21;931:5;916:21;:::i;:::-;911:3;904:34;894:50;;:::o;950:302::-;;1113:66;1177:1;1172:3;1113:66;:::i;:::-;1106:73;;1209:7;1205:1;1200:3;1196:11;1189:28;1243:2;1238:3;1234:12;1227:19;;1096:156;;;:::o;1258:118::-;1345:24;1363:5;1345:24;:::i;:::-;1340:3;1333:37;1323:53;;:::o;1382:210::-;;1507:2;1496:9;1492:18;1484:26;;1520:65;1582:1;1571:9;1567:17;1558:6;1520:65;:::i;:::-;1474:118;;;;:::o;1598:419::-;;1802:2;1791:9;1787:18;1779:26;;1851:9;1845:4;1841:20;1837:1;1826:9;1822:17;1815:47;1879:131;2005:4;1879:131;:::i;:::-;1871:139;;1769:248;;;:::o;2023:222::-;;2154:2;2143:9;2139:18;2131:26;;2167:71;2235:1;2224:9;2220:17;2211:6;2167:71;:::i;:::-;2121:124;;;;:::o;2251:169::-;;2369:6;2364:3;2357:19;2409:4;2404:3;2400:14;2385:29;;2347:73;;;;:::o;2426:185::-;;2483:20;2501:1;2483:20;:::i;:::-;2478:25;;2517:20;2535:1;2517:20;:::i;:::-;2512:25;;2556:1;2546:2;;2561:18;;:::i;:::-;2546:2;2603:1;2600;2596:9;2591:14;;2468:143;;;;:::o;2617:191::-;;2677:20;2695:1;2677:20;:::i;:::-;2672:25;;2711:20;2729:1;2711:20;:::i;:::-;2706:25;;2750:1;2747;2744:8;2741:2;;;2755:18;;:::i;:::-;2741:2;2800:1;2797;2793:9;2785:17;;2662:146;;;;:::o;2814:90::-;;2891:5;2884:13;2877:21;2866:32;;2856:48;;;:::o;2910:77::-;;2976:5;2965:16;;2955:32;;;:::o;2993:233::-;;3055:24;3073:5;3055:24;:::i;:::-;3046:33;;3101:66;3094:5;3091:77;3088:2;;;3171:18;;:::i;:::-;3088:2;3218:1;3211:5;3207:13;3200:20;;3036:190;;;:::o;3232:180::-;3280:77;3277:1;3270:88;3377:4;3374:1;3367:15;3401:4;3398:1;3391:15;3418:180;3466:77;3463:1;3456:88;3563:4;3560:1;3553:15;3587:4;3584:1;3577:15;3604:116;3674:21;3689:5;3674:21;:::i;:::-;3667:5;3664:32;3654:2;;3710:1;3707;3700:12;3654:2;3644:76;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "243600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"consecutiveWins()": "1129",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 763,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 763,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 763,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 149,
									"end": 226,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 226,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 130,
									"end": 226,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 326,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 326,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 326,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 244,
									"end": 326,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 244,
									"end": 326,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 244,
									"end": 326,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 244,
									"end": 326,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 244,
									"end": 326,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 244,
									"end": 326,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 277,
									"end": 292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 277,
									"end": 296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 277,
									"end": 296,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 277,
									"end": 296,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 277,
									"end": 296,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 302,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 322,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 300,
									"end": 322,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 300,
									"end": 322,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 300,
									"end": 322,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 300,
									"end": 322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 244,
									"end": 326,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 57,
									"end": 763,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 446,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 530,
									"end": 535,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 501,
									"end": 536,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 501,
									"end": 536,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 548,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 667,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 614,
									"end": 668,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 603,
									"end": 668,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 603,
									"end": 668,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 771,
									"end": 776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 746,
									"end": 751,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 743,
									"end": 778,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 733,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 782,
									"end": 794,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 733,
									"end": 735,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 723,
									"end": 802,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 723,
									"end": 802,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 57,
									"end": 763,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 57,
									"end": 763,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 763,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 763,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 763,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 763,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 763,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 763,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 763,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220017712aac8832f4b3c7510c7f30b6817387dc29e126085d3cf5b81e26d3a638d64736f6c63430008000033",
									".code": [
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 372,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 433,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 421,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 421,
											"end": 437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 421,
											"end": 437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 421,
											"end": 437,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 421,
											"end": 437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 411,
											"end": 438,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 403,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 439,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 382,
											"end": 439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 448,
											"end": 456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 470,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 444,
											"end": 490,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 444,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 444,
											"end": 490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 477,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 477,
											"end": 485,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 444,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 444,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 505,
											"end": 515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 515,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 494,
											"end": 515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 519,
											"end": 535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 551,
											"end": 557,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 538,
											"end": 557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 557,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 557,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 538,
											"end": 557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 519,
											"end": 557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 562,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 574,
											"end": 587,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 574,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 574,
											"end": 602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 597,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 574,
											"end": 602,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 574,
											"end": 602,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 574,
											"end": 602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 590,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 602,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 574,
											"end": 602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 562,
											"end": 602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 615,
											"end": 617,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 617,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 623,
											"end": 627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 615,
											"end": 628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 607,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 661,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 647,
											"end": 661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 647,
											"end": 661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 647,
											"end": 651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 647,
											"end": 661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 647,
											"end": 661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 647,
											"end": 661,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 643,
											"end": 758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 643,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 643,
											"end": 758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 668,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 668,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 668,
											"end": 685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 668,
											"end": 685,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 668,
											"end": 685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 668,
											"end": 685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 701,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 690,
											"end": 701,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 690,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 690,
											"end": 701,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 643,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 643,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 736,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 753,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 741,
											"end": 753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 741,
											"end": 753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 741,
											"end": 753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 741,
											"end": 753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 329,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 761,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 108,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 94,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 75,
											"end": 95,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 128,
											"end": 133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 283,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 146,
											"end": 283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 225,
											"end": 238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 216,
											"end": 238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 216,
											"end": 238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 247,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 271,
											"end": 276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 247,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 247,
											"end": 277,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 247,
											"end": 277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 206,
											"end": 283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 206,
											"end": 283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 206,
											"end": 283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 206,
											"end": 283,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 289,
											"end": 545,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 394,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 373,
											"end": 380,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 369,
											"end": 392,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 365,
											"end": 397,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 362,
											"end": 364,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 362,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 362,
											"end": 364,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 410,
											"end": 411,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 400,
											"end": 412,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 362,
											"end": 364,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 362,
											"end": 364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 453,
											"end": 454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 496,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 478,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 478,
											"end": 528,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 478,
											"end": 528,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 478,
											"end": 528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 468,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 424,
											"end": 538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 545,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 352,
											"end": 545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 352,
											"end": 545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 545,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 551,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 551,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 646,
											"end": 653,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 638,
											"end": 670,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 635,
											"end": 637,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 635,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 635,
											"end": 637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 683,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 685,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 635,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 635,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 726,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 804,
											"end": 811,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 795,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 780,
											"end": 802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 751,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 751,
											"end": 812,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 751,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 751,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 741,
											"end": 812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 741,
											"end": 812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 829,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 625,
											"end": 829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 625,
											"end": 829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 829,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 835,
											"end": 944,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 835,
											"end": 944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 916,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 931,
											"end": 936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 916,
											"end": 937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 916,
											"end": 937,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 916,
											"end": 937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 904,
											"end": 938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 894,
											"end": 944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 894,
											"end": 944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 894,
											"end": 944,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 950,
											"end": 1252,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 950,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1177,
											"end": 1178,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1172,
											"end": 1175,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1113,
											"end": 1179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1113,
											"end": 1179,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1113,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "PUSH",
											"source": 1,
											"value": "6572726F72000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1203,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1252,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1258,
											"end": 1376,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1258,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1363,
											"end": 1368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1345,
											"end": 1369,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1369,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1345,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1376,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1382,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1382,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1520,
											"end": 1585,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1520,
											"end": 1585,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1520,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1592,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1598,
											"end": 2017,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1598,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 2017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2005,
											"end": 2009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1879,
											"end": 2010,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1879,
											"end": 2010,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1879,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 2010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 2010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 2017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 2017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 2017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 2017,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2023,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2023,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2233,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2217,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2167,
											"end": 2238,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2167,
											"end": 2238,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2167,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2245,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2245,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2251,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2251,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2414,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2420,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2420,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2426,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2501,
											"end": 2502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2535,
											"end": 2536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2537,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2546,
											"end": 2548,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2548,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2546,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2605,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2617,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2617,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2695,
											"end": 2696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2677,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2729,
											"end": 2730,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2711,
											"end": 2731,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2711,
											"end": 2731,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2711,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2731,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2750,
											"end": 2751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2748,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2752,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2800,
											"end": 2801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2808,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2808,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2814,
											"end": 2904,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2814,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2897,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2898,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2904,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2910,
											"end": 2987,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2910,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 2987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 2981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2987,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2993,
											"end": 3226,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2993,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3073,
											"end": 3078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3055,
											"end": 3079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3079,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3055,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3167,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3094,
											"end": 3099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3168,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3090,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3088,
											"end": 3090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3090,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3088,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3219,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3226,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3232,
											"end": 3412,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3232,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3277,
											"end": 3278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3381,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3374,
											"end": 3375,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3405,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3398,
											"end": 3399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3406,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3598,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3418,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3543,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3463,
											"end": 3464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3560,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3591,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3584,
											"end": 3585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3604,
											"end": 3720,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3604,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3689,
											"end": 3694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3674,
											"end": 3695,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3674,
											"end": 3695,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3674,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3696,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3712,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3720,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CoinFlip.sol\":{\"keccak256\":\"0x270371e1e347c990bb7b8e9e0ab4502090c21e350e9ca9c41bee57bf7040762e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75010c8b67ccbb987fba12f2ec033f822f03339339ce33cc678085ccedce038d\",\"dweb:/ipfs/QmQDodXFDwHmq2NnpCUM8m5o73zQ33KUXhBaEJqaFFZTs1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "CoinFlip.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "CoinFlip.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "CoinFlip.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 11,
								"contract": "CoinFlip.sol:CoinFlip",
								"label": "cf",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(CoinFlip)100"
							}
						],
						"types": {
							"t_contract(CoinFlip)100": {
								"encoding": "inplace",
								"label": "contract CoinFlip",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"CoinFlip.sol": {
				"ast": {
					"absolutePath": "CoinFlip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							100
						]
					},
					"id": 101,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "CoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 3,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nodeType": "VariableDeclaration",
									"scope": 100,
									"src": "78:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "78:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "lastHash",
									"nodeType": "VariableDeclaration",
									"scope": 100,
									"src": "111:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "111:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"scope": 100,
									"src": "130:96:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "130:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "149:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "cf",
									"nodeType": "VariableDeclaration",
									"scope": 100,
									"src": "229:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_CoinFlip_$100",
										"typeString": "contract CoinFlip"
									},
									"typeName": {
										"id": 10,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 9,
											"name": "CoinFlip",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 100,
											"src": "229:8:0"
										},
										"referencedDeclaration": 100,
										"src": "229:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CoinFlip_$100",
											"typeString": "contract CoinFlip"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "273:53:0",
										"statements": [
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "277:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "295:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "277:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "277:19:0"
											},
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "cf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "300:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$100",
															"typeString": "contract CoinFlip"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 22,
																"name": "_target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "314:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 21,
															"name": "CoinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "305:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CoinFlip_$100_$",
																"typeString": "type(contract CoinFlip)"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "305:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$100",
															"typeString": "contract CoinFlip"
														}
													},
													"src": "300:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$100",
														"typeString": "contract CoinFlip"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "300:22:0"
											}
										]
									},
									"id": 27,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "256:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:0:0"
									},
									"scope": 100,
									"src": "244:82:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "378:383:0",
										"statements": [
											{
												"assignments": [
													35
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"mutability": "mutable",
														"name": "blockValue",
														"nodeType": "VariableDeclaration",
														"scope": 98,
														"src": "382:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 34,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 45,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 39,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "421:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "421:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 41,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "436:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "421:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 38,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "411:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "411:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "403:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 36,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "403:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "403:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "382:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 46,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "448:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 47,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "460:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "448:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 53,
												"nodeType": "IfStatement",
												"src": "444:46:0",
												"trueBody": {
													"id": 52,
													"nodeType": "Block",
													"src": "472:18:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 49,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "477:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "477:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 51,
															"nodeType": "ExpressionStatement",
															"src": "477:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 54,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "494:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 55,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "494:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "494:21:0"
											},
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "coinFlip",
														"nodeType": "VariableDeclaration",
														"scope": 98,
														"src": "519:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 58,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "519:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 60,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "538:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 61,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "551:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "538:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "519:38:0"
											},
											{
												"assignments": [
													65
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"scope": 98,
														"src": "562:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 64,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "562:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 72,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 66,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "574:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "586:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "574:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "597:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "574:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "590:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "562:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 76,
																	"name": "side",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "623:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 74,
																	"name": "cf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "615:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CoinFlip_$100",
																		"typeString": "contract CoinFlip"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "flip",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 99,
																"src": "615:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
																	"typeString": "function (bool) external returns (bool)"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "615:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6572726f72",
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
																"typeString": "literal_string \"error\""
															},
															"value": "error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
																"typeString": "literal_string \"error\""
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "607:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "607:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "607:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 81,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "647:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 82,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "655:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "647:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 96,
													"nodeType": "Block",
													"src": "712:46:0",
													"statements": [
														{
															"expression": {
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 90,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "717:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "735:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "717:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 93,
															"nodeType": "ExpressionStatement",
															"src": "717:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "748:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 33,
															"id": 95,
															"nodeType": "Return",
															"src": "741:12:0"
														}
													]
												},
												"id": 97,
												"nodeType": "IfStatement",
												"src": "643:115:0",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "663:43:0",
													"statements": [
														{
															"expression": {
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "668:17:0",
																"subExpression": {
																	"id": 84,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "668:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 86,
															"nodeType": "ExpressionStatement",
															"src": "668:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "697:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 33,
															"id": 88,
															"nodeType": "Return",
															"src": "690:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "_guess",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "343:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 28,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "343:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:13:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "372:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "372:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "371:6:0"
									},
									"scope": 100,
									"src": "329:432:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 101,
							"src": "57:706:0"
						}
					],
					"src": "32:732:0"
				},
				"id": 0
			}
		}
	}
}